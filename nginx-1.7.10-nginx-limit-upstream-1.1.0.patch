diff -uNr ORIG2-nginx-1.7.10/src/core/ngx_core.h nginx-1.7.10/src/core/ngx_core.h
--- ORIG2-nginx-1.7.10/src/core/ngx_core.h	2015-02-10 23:33:33.000000000 +0900
+++ nginx-1.7.10/src/core/ngx_core.h	2015-05-08 22:44:56.045743131 +0900
@@ -33,6 +33,7 @@
 #define  NGX_DONE       -4
 #define  NGX_DECLINED   -5
 #define  NGX_ABORT      -6
+#define  NGX_BLOCK      -7
 
 
 #include <ngx_errno.h>
diff -uNr ORIG2-nginx-1.7.10/src/http/ngx_http_upstream.c nginx-1.7.10/src/http/ngx_http_upstream.c
--- ORIG2-nginx-1.7.10/src/http/ngx_http_upstream.c	2015-03-01 10:58:25.000000000 +0900
+++ nginx-1.7.10/src/http/ngx_http_upstream.c	2015-05-08 22:53:52.200489658 +0900
@@ -31,8 +31,6 @@
 static void ngx_http_upstream_wr_check_broken_connection(ngx_http_request_t *r);
 static void ngx_http_upstream_check_broken_connection(ngx_http_request_t *r,
     ngx_event_t *ev);
-static void ngx_http_upstream_connect(ngx_http_request_t *r,
-    ngx_http_upstream_t *u);
 static ngx_int_t ngx_http_upstream_reinit(ngx_http_request_t *r,
     ngx_http_upstream_t *u);
 static void ngx_http_upstream_send_request(ngx_http_request_t *r,
@@ -1292,40 +1290,47 @@
 }
 
 
-static void
+void
 ngx_http_upstream_connect(ngx_http_request_t *r, ngx_http_upstream_t *u)
 {
     ngx_int_t          rc;
     ngx_time_t        *tp;
     ngx_connection_t  *c;
 
-    r->connection->log->action = "connecting to upstream";
+    if (!u->blocked) {
+        r->connection->log->action = "connecting to upstream";
 
-    if (u->state && u->state->response_sec) {
-        tp = ngx_timeofday();
-        u->state->response_sec = tp->sec - u->state->response_sec;
-        u->state->response_msec = tp->msec - u->state->response_msec;
-    }
+        if (u->state && u->state->response_sec) {
+            tp = ngx_timeofday();
+            u->state->response_sec = tp->sec - u->state->response_sec;
+            u->state->response_msec = tp->msec - u->state->response_msec;
+        }
+    
+        u->state = ngx_array_push(r->upstream_states);
+        if (u->state == NULL) {
+            ngx_http_upstream_finalize_request(r, u,
+                                               NGX_HTTP_INTERNAL_SERVER_ERROR);
+            return;
+        }
 
-    u->state = ngx_array_push(r->upstream_states);
-    if (u->state == NULL) {
-        ngx_http_upstream_finalize_request(r, u,
-                                           NGX_HTTP_INTERNAL_SERVER_ERROR);
-        return;
+        ngx_memzero(u->state, sizeof(ngx_http_upstream_state_t));
+    
+        tp = ngx_timeofday();
+        u->state->response_sec = tp->sec;
+        u->state->response_msec = tp->msec;
+        u->state->header_sec = (time_t) NGX_ERROR;
     }
 
-    ngx_memzero(u->state, sizeof(ngx_http_upstream_state_t));
-
-    tp = ngx_timeofday();
-    u->state->response_sec = tp->sec;
-    u->state->response_msec = tp->msec;
-    u->state->header_sec = (time_t) NGX_ERROR;
 
     rc = ngx_event_connect_peer(&u->peer);
 
     ngx_log_debug1(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
                    "http upstream connect: %i", rc);
 
+    if (rc == NGX_BLOCK) {
+        return;
+    }
+
     if (rc == NGX_ERROR) {
         ngx_http_upstream_finalize_request(r, u,
                                            NGX_HTTP_INTERNAL_SERVER_ERROR);
diff -uNr ORIG2-nginx-1.7.10/src/http/ngx_http_upstream.h nginx-1.7.10/src/http/ngx_http_upstream.h
--- ORIG2-nginx-1.7.10/src/http/ngx_http_upstream.h	2015-03-01 10:58:25.000000000 +0900
+++ nginx-1.7.10/src/http/ngx_http_upstream.h	2015-05-08 22:55:46.823783014 +0900
@@ -367,6 +367,7 @@
     unsigned                         request_sent:1;
     unsigned                         request_all_sent:1;
     unsigned                         header_sent:1;
+    unsigned                         blocked:1;
 };
 
 
@@ -396,6 +397,8 @@
     void *conf);
 char *ngx_http_upstream_param_set_slot(ngx_conf_t *cf, ngx_command_t *cmd,
     void *conf);
+void ngx_http_upstream_connect(ngx_http_request_t *r,
+    ngx_http_upstream_t *u);
 ngx_int_t ngx_http_upstream_hide_headers_hash(ngx_conf_t *cf,
     ngx_http_upstream_conf_t *conf, ngx_http_upstream_conf_t *prev,
     ngx_str_t *default_hide_headers, ngx_hash_init_t *hash);
